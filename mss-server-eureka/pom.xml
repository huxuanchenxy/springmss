<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.seari</groupId>
		<artifactId>mss.platform</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>org.seari</groupId>
	<artifactId>mss-server-eureka</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>mss-server-eureka</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.SR5</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<!-- 打包后文件名称：项目名-环境-版本 -->
		<finalName>${project.artifactId}-${profileActive}-${project.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- 开启过滤替换功能-->
				<filtering>true</filtering>
				<includes>
					<!-- 项目打包完成的包中只包含当前环境文件 -->
					<include>application.yml</include>
					<include>application-${profileActive}.yml</include>
				</includes>
			</resource>
		</resources>
	</build>
	<profiles>
		<profile>
			<id>slave1</id>
			<properties>
				<profileActive>slave1</profileActive>
			</properties>
			<activation>
				<!-- 默认情况下使用dev开发配置 如 打包时不包含 -p 参数-->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<!-- 打包命令package -P test -->
		<profile>
			<id>slave2</id>
			<properties>
				<profileActive>slave2</profileActive>
			</properties>
		</profile>
	</profiles>
</project>
